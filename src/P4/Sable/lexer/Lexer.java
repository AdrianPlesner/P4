/* This file was generated by SableCC (http://www.sablecc.org/). */

package P4.Sable.lexer;

import java.io.*;
import P4.Sable.node.*;

@SuppressWarnings("nls")
public class Lexer
{
    protected Token token;
    protected State state = State.INITIAL;

    private IPushbackReader in;
    private int line;
    private int pos;
    private boolean cr;
    private boolean eof;
    private final StringBuffer text = new StringBuffer();

    @SuppressWarnings("unused")
    protected void filter() throws LexerException, IOException
    {
        // Do nothing
    }

    public Lexer(@SuppressWarnings("hiding") final PushbackReader in)
    {
        this.in = new IPushbackReader() {

            private PushbackReader pushbackReader = in;
            
            @Override
            public void unread(int c) throws IOException {
                pushbackReader.unread(c);
            }
            
            @Override
            public int read() throws IOException {
                return pushbackReader.read();
            }
        };
    }
 
    public Lexer(@SuppressWarnings("hiding") IPushbackReader in)
    {
        this.in = in;
    }
 
    public Token peek() throws LexerException, IOException
    {
        while(this.token == null)
        {
            this.token = getToken();
            filter();
        }

        return this.token;
    }

    public Token next() throws LexerException, IOException
    {
        while(this.token == null)
        {
            this.token = getToken();
            filter();
        }

        Token result = this.token;
        this.token = null;
        return result;
    }

    protected Token getToken() throws IOException, LexerException
    {
        int dfa_state = 0;

        int start_pos = this.pos;
        int start_line = this.line;

        int accept_state = -1;
        int accept_token = -1;
        int accept_length = -1;
        int accept_pos = -1;
        int accept_line = -1;

        @SuppressWarnings("hiding") int[][][] gotoTable = Lexer.gotoTable[this.state.id()];
        @SuppressWarnings("hiding") int[] accept = Lexer.accept[this.state.id()];
        this.text.setLength(0);

        while(true)
        {
            int c = getChar();

            if(c != -1)
            {
                switch(c)
                {
                case 10:
                    if(this.cr)
                    {
                        this.cr = false;
                    }
                    else
                    {
                        this.line++;
                        this.pos = 0;
                    }
                    break;
                case 13:
                    this.line++;
                    this.pos = 0;
                    this.cr = true;
                    break;
                default:
                    this.pos++;
                    this.cr = false;
                    break;
                }

                this.text.append((char) c);

                do
                {
                    int oldState = (dfa_state < -1) ? (-2 -dfa_state) : dfa_state;

                    dfa_state = -1;

                    int[][] tmp1 =  gotoTable[oldState];
                    int low = 0;
                    int high = tmp1.length - 1;

                    while(low <= high)
                    {
                        // int middle = (low + high) / 2;
                        int middle = (low + high) >>> 1;
                        int[] tmp2 = tmp1[middle];

                        if(c < tmp2[0])
                        {
                            high = middle - 1;
                        }
                        else if(c > tmp2[1])
                        {
                            low = middle + 1;
                        }
                        else
                        {
                            dfa_state = tmp2[2];
                            break;
                        }
                    }
                }while(dfa_state < -1);
            }
            else
            {
                dfa_state = -1;
            }

            if(dfa_state >= 0)
            {
                if(accept[dfa_state] != -1)
                {
                    accept_state = dfa_state;
                    accept_token = accept[dfa_state];
                    accept_length = this.text.length();
                    accept_pos = this.pos;
                    accept_line = this.line;
                }
            }
            else
            {
                if(accept_state != -1)
                {
                    switch(accept_token)
                    {
                    case 0:
                        {
                            @SuppressWarnings("hiding") Token token = new0(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 1:
                        {
                            @SuppressWarnings("hiding") Token token = new1(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 2:
                        {
                            @SuppressWarnings("hiding") Token token = new2(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 3:
                        {
                            @SuppressWarnings("hiding") Token token = new3(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 4:
                        {
                            @SuppressWarnings("hiding") Token token = new4(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 5:
                        {
                            @SuppressWarnings("hiding") Token token = new5(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 6:
                        {
                            @SuppressWarnings("hiding") Token token = new6(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 7:
                        {
                            @SuppressWarnings("hiding") Token token = new7(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 8:
                        {
                            @SuppressWarnings("hiding") Token token = new8(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 9:
                        {
                            @SuppressWarnings("hiding") Token token = new9(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 10:
                        {
                            @SuppressWarnings("hiding") Token token = new10(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 11:
                        {
                            @SuppressWarnings("hiding") Token token = new11(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 12:
                        {
                            @SuppressWarnings("hiding") Token token = new12(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 13:
                        {
                            @SuppressWarnings("hiding") Token token = new13(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 14:
                        {
                            @SuppressWarnings("hiding") Token token = new14(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 15:
                        {
                            @SuppressWarnings("hiding") Token token = new15(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 16:
                        {
                            @SuppressWarnings("hiding") Token token = new16(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 17:
                        {
                            @SuppressWarnings("hiding") Token token = new17(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 18:
                        {
                            @SuppressWarnings("hiding") Token token = new18(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 19:
                        {
                            @SuppressWarnings("hiding") Token token = new19(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 20:
                        {
                            @SuppressWarnings("hiding") Token token = new20(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 21:
                        {
                            @SuppressWarnings("hiding") Token token = new21(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 22:
                        {
                            @SuppressWarnings("hiding") Token token = new22(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 23:
                        {
                            @SuppressWarnings("hiding") Token token = new23(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 24:
                        {
                            @SuppressWarnings("hiding") Token token = new24(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 25:
                        {
                            @SuppressWarnings("hiding") Token token = new25(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 26:
                        {
                            @SuppressWarnings("hiding") Token token = new26(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 27:
                        {
                            @SuppressWarnings("hiding") Token token = new27(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 28:
                        {
                            @SuppressWarnings("hiding") Token token = new28(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 29:
                        {
                            @SuppressWarnings("hiding") Token token = new29(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 30:
                        {
                            @SuppressWarnings("hiding") Token token = new30(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 31:
                        {
                            @SuppressWarnings("hiding") Token token = new31(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 32:
                        {
                            @SuppressWarnings("hiding") Token token = new32(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 33:
                        {
                            @SuppressWarnings("hiding") Token token = new33(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 34:
                        {
                            @SuppressWarnings("hiding") Token token = new34(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 35:
                        {
                            @SuppressWarnings("hiding") Token token = new35(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 36:
                        {
                            @SuppressWarnings("hiding") Token token = new36(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 37:
                        {
                            @SuppressWarnings("hiding") Token token = new37(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 38:
                        {
                            @SuppressWarnings("hiding") Token token = new38(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 39:
                        {
                            @SuppressWarnings("hiding") Token token = new39(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 40:
                        {
                            @SuppressWarnings("hiding") Token token = new40(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 41:
                        {
                            @SuppressWarnings("hiding") Token token = new41(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 42:
                        {
                            @SuppressWarnings("hiding") Token token = new42(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 43:
                        {
                            @SuppressWarnings("hiding") Token token = new43(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 44:
                        {
                            @SuppressWarnings("hiding") Token token = new44(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 45:
                        {
                            @SuppressWarnings("hiding") Token token = new45(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 46:
                        {
                            @SuppressWarnings("hiding") Token token = new46(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    }
                }
                else
                {
                    if(this.text.length() > 0)
                    {
                        throw new LexerException(
                            new InvalidToken(this.text.substring(0, 1), start_line + 1, start_pos + 1),
                            "[" + (start_line + 1) + "," + (start_pos + 1) + "]" +
                            " Unknown token: " + this.text);
                    }

                    @SuppressWarnings("hiding") EOF token = new EOF(
                        start_line + 1,
                        start_pos + 1);
                    return token;
                }
            }
        }
    }

    Token new0(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBlank(text, line, pos); }
    Token new1(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TComment(text, line, pos); }
    Token new2(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBoolLiteral(text, line, pos); }
    Token new3(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAddOp(text, line, pos); }
    Token new4(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMultOp(text, line, pos); }
    Token new5(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TIntLiteral(text, line, pos); }
    Token new6(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFloatLiteral(text, line, pos); }
    Token new7(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TString(text, line, pos); }
    Token new8(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBoolOp(text, line, pos); }
    Token new9(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRelationOp(text, line, pos); }
    Token new10(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAssign(text, line, pos); }
    Token new11(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEqualOp(text, line, pos); }
    Token new12(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLParen(line, pos); }
    Token new13(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRParen(line, pos); }
    Token new14(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLBrack(line, pos); }
    Token new15(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRBrack(line, pos); }
    Token new16(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSetup(line, pos); }
    Token new17(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSeparator(line, pos); }
    Token new18(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDot(line, pos); }
    Token new19(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMoves(line, pos); }
    Token new20(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLBox(line, pos); }
    Token new21(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRBox(line, pos); }
    Token new22(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TReturn(line, pos); }
    Token new23(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSemi(line, pos); }
    Token new24(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TIf(line, pos); }
    Token new25(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TElse(line, pos); }
    Token new26(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSwitch(line, pos); }
    Token new27(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TCase(line, pos); }
    Token new28(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDefault(line, pos); }
    Token new29(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TColon(line, pos); }
    Token new30(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TWhile(line, pos); }
    Token new31(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFor(line, pos); }
    Token new32(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TForeach(line, pos); }
    Token new33(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTurn(line, pos); }
    Token new34(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEndCon(line, pos); }
    Token new35(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TIn(line, pos); }
    Token new36(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TCard(line, pos); }
    Token new37(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLArr(line, pos); }
    Token new38(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRArr(line, pos); }
    Token new39(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TList(line, pos); }
    Token new40(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTypeof(line, pos); }
    Token new41(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFun(line, pos); }
    Token new42(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TInc(line, pos); }
    Token new43(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSub(line, pos); }
    Token new44(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TGame(line, pos); }
    Token new45(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPlayer(line, pos); }
    Token new46(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TId(text, line, pos); }

    private int getChar() throws IOException
    {
        if(this.eof)
        {
            return -1;
        }

        int result = this.in.read();

        if(result == -1)
        {
            this.eof = true;
        }

        return result;
    }

    private void pushBack(int acceptLength) throws IOException
    {
        int length = this.text.length();
        for(int i = length - 1; i >= acceptLength; i--)
        {
            this.eof = false;

            this.in.unread(this.text.charAt(i));
        }
    }

    protected void unread(@SuppressWarnings("hiding") Token token) throws IOException
    {
        @SuppressWarnings("hiding") String text = token.getText();
        int length = text.length();

        for(int i = length - 1; i >= 0; i--)
        {
            this.eof = false;

            this.in.unread(text.charAt(i));
        }

        this.pos = token.getPos() - 1;
        this.line = token.getLine() - 1;
    }

    private String getText(int acceptLength)
    {
        StringBuffer s = new StringBuffer(acceptLength);
        for(int i = 0; i < acceptLength; i++)
        {
            s.append(this.text.charAt(i));
        }

        return s.toString();
    }

    private static int[][][][] gotoTable;
/*  {
        { // INITIAL
            {{9, 9, 1}, {10, 10, 2}, {13, 13, 3}, {32, 32, 4}, {33, 33, 5}, {34, 34, 6}, {37, 37, 7}, {38, 38, 8}, {40, 40, 9}, {41, 41, 10}, {42, 42, 11}, {43, 43, 12}, {44, 44, 13}, {45, 45, 14}, {46, 46, 15}, {47, 47, 16}, {48, 48, 17}, {49, 57, 18}, {58, 58, 19}, {59, 59, 20}, {60, 60, 21}, {61, 61, 22}, {62, 62, 23}, {65, 66, 24}, {67, 67, 25}, {68, 68, 24}, {69, 69, 26}, {70, 70, 27}, {71, 71, 28}, {72, 75, 24}, {76, 76, 29}, {77, 77, 30}, {78, 79, 24}, {80, 80, 31}, {81, 82, 24}, {83, 83, 32}, {84, 84, 33}, {85, 90, 24}, {91, 91, 34}, {93, 93, 35}, {97, 98, 36}, {99, 99, 37}, {100, 100, 38}, {101, 101, 39}, {102, 102, 40}, {103, 104, 36}, {105, 105, 41}, {106, 113, 36}, {114, 114, 42}, {115, 115, 43}, {116, 116, 44}, {117, 118, 36}, {119, 119, 45}, {120, 122, 36}, {123, 123, 46}, {124, 124, 47}, {125, 125, 48}, },
            {{9, 32, -2}, },
            {{9, 32, -2}, },
            {{9, 9, 1}, {10, 10, 49}, {13, 32, -2}, },
            {{9, 32, -2}, },
            {{61, 61, 50}, },
            {{0, 9, 51}, {11, 12, 51}, {14, 33, 51}, {34, 34, 52}, {35, 65535, 51}, },
            {{61, 61, 53}, },
            {{61, 61, 54}, },
            {},
            {},
            {{61, 61, 55}, },
            {{61, 61, 56}, },
            {},
            {{61, 61, 57}, },
            {},
            {{47, 47, 58}, {61, 61, 59}, },
            {{48, 57, 17}, },
            {{46, 46, 60}, {48, 57, 61}, },
            {},
            {},
            {{61, 61, 62}, },
            {{61, 61, 63}, },
            {{61, 61, 64}, },
            {{48, 57, 65}, {65, 90, 66}, {97, 122, 67}, },
            {{48, 90, -26}, {97, 97, 68}, {98, 122, 67}, },
            {{48, 90, -26}, {97, 109, 67}, {110, 110, 69}, {111, 122, 67}, },
            {{48, 90, -26}, {97, 116, 67}, {117, 117, 70}, {118, 122, 67}, },
            {{48, 90, -26}, {97, 97, 71}, {98, 122, 67}, },
            {{48, 90, -26}, {97, 104, 67}, {105, 105, 72}, {106, 122, 67}, },
            {{48, 90, -26}, {97, 110, 67}, {111, 111, 73}, {112, 122, 67}, },
            {{48, 90, -26}, {97, 107, 67}, {108, 108, 74}, {109, 122, 67}, },
            {{48, 90, -26}, {97, 100, 67}, {101, 101, 75}, {102, 116, 67}, {117, 117, 76}, {118, 122, 67}, },
            {{48, 116, -29}, {117, 117, 77}, {118, 122, 67}, },
            {},
            {},
            {{48, 122, -26}, },
            {{48, 90, -26}, {97, 97, 78}, {98, 122, 67}, },
            {{48, 100, -34}, {101, 101, 79}, {102, 122, 67}, },
            {{48, 107, -33}, {108, 108, 80}, {109, 122, 67}, },
            {{48, 90, -26}, {97, 97, 81}, {98, 110, 67}, {111, 111, 82}, {112, 122, 67}, },
            {{48, 90, -26}, {97, 101, 67}, {102, 102, 83}, {103, 109, 67}, {110, 110, 84}, {111, 122, 67}, },
            {{48, 100, -34}, {101, 101, 85}, {102, 122, 67}, },
            {{48, 90, -26}, {97, 118, 67}, {119, 119, 86}, {120, 122, 67}, },
            {{48, 90, -26}, {97, 113, 67}, {114, 114, 87}, {115, 120, 67}, {121, 121, 88}, {122, 122, 67}, },
            {{48, 90, -26}, {97, 103, 67}, {104, 104, 89}, {105, 122, 67}, },
            {},
            {{61, 61, 90}, },
            {},
            {{9, 32, -2}, },
            {},
            {{0, 65535, -8}, },
            {},
            {},
            {},
            {},
            {},
            {},
            {{0, 9, 91}, {10, 10, 92}, {11, 12, 91}, {13, 13, 93}, {14, 65535, 91}, },
            {},
            {{48, 57, 94}, },
            {{46, 57, -20}, },
            {},
            {},
            {},
            {{48, 122, -26}, },
            {{48, 122, -26}, },
            {{48, 122, -26}, },
            {{48, 113, -46}, {114, 114, 95}, {115, 122, 67}, },
            {{48, 90, -26}, {97, 99, 67}, {100, 100, 96}, {101, 122, 67}, },
            {{48, 109, -28}, {110, 110, 97}, {111, 122, 67}, },
            {{48, 90, -26}, {97, 108, 67}, {109, 109, 98}, {110, 122, 67}, },
            {{48, 90, -26}, {97, 114, 67}, {115, 115, 99}, {116, 122, 67}, },
            {{48, 90, -26}, {97, 117, 67}, {118, 118, 100}, {119, 122, 67}, },
            {{48, 90, -26}, {97, 97, 101}, {98, 122, 67}, },
            {{48, 90, -26}, {97, 115, 67}, {116, 116, 102}, {117, 122, 67}, },
            {{48, 90, -26}, {97, 97, 67}, {98, 98, 103}, {99, 122, 67}, },
            {{48, 113, -46}, {114, 114, 104}, {115, 122, 67}, },
            {{48, 114, -74}, {115, 115, 105}, {116, 122, 67}, },
            {{48, 101, -43}, {102, 102, 106}, {103, 122, 67}, },
            {{48, 114, -74}, {115, 115, 107}, {116, 122, 67}, },
            {{48, 107, -33}, {108, 108, 108}, {109, 122, 67}, },
            {{48, 113, -46}, {114, 114, 109}, {115, 122, 67}, },
            {{48, 122, -26}, },
            {{48, 90, -26}, {97, 98, 67}, {99, 99, 110}, {100, 122, 67}, },
            {{48, 115, -77}, {116, 116, 111}, {117, 122, 67}, },
            {{48, 104, -31}, {105, 105, 112}, {106, 122, 67}, },
            {{48, 116, -29}, {117, 117, 113}, {118, 122, 67}, },
            {{48, 90, -26}, {97, 111, 67}, {112, 112, 114}, {113, 122, 67}, },
            {{48, 104, -31}, {105, 105, 115}, {106, 122, 67}, },
            {},
            {{0, 65535, -60}, },
            {},
            {{10, 10, 116}, },
            {{48, 57, 94}, },
            {{48, 99, -71}, {100, 100, 117}, {101, 122, 67}, },
            {{48, 57, 65}, {65, 66, 66}, {67, 67, 118}, {68, 90, 66}, {97, 122, 67}, },
            {{48, 98, -86}, {99, 99, 119}, {100, 122, 67}, },
            {{48, 100, -34}, {101, 101, 120}, {102, 122, 67}, },
            {{48, 115, -77}, {116, 116, 121}, {117, 122, 67}, },
            {{48, 100, -34}, {101, 101, 122}, {102, 122, 67}, },
            {{48, 90, -26}, {97, 120, 67}, {121, 121, 123}, {122, 122, 67}, },
            {{48, 116, -29}, {117, 117, 124}, {118, 122, 67}, },
            {{48, 98, -86}, {99, 99, 125}, {100, 122, 67}, },
            {{48, 109, -28}, {110, 110, 126}, {111, 122, 67}, },
            {{48, 100, -34}, {101, 101, 127}, {102, 122, 67}, },
            {{48, 90, -26}, {97, 97, 128}, {98, 122, 67}, },
            {{48, 100, -34}, {101, 101, 129}, {102, 122, 67}, },
            {{48, 114, -74}, {115, 115, 130}, {116, 122, 67}, },
            {{48, 100, -34}, {101, 101, 131}, {102, 122, 67}, },
            {{48, 107, -33}, {108, 108, 132}, {109, 122, 67}, },
            {{48, 116, -29}, {117, 117, 133}, {118, 122, 67}, },
            {{48, 115, -77}, {116, 116, 134}, {117, 122, 67}, },
            {{48, 100, -34}, {101, 101, 135}, {102, 122, 67}, },
            {{48, 100, -34}, {101, 101, 136}, {102, 122, 67}, },
            {{48, 107, -33}, {108, 108, 137}, {109, 122, 67}, },
            {},
            {{48, 122, -26}, },
            {{48, 110, -32}, {111, 111, 138}, {112, 122, 67}, },
            {{48, 115, -77}, {116, 116, 139}, {117, 122, 67}, },
            {{48, 122, -26}, },
            {{48, 122, -26}, },
            {{48, 114, -74}, {115, 115, 140}, {116, 122, 67}, },
            {{48, 100, -34}, {101, 101, 141}, {102, 122, 67}, },
            {{48, 111, -90}, {112, 112, 142}, {113, 122, 67}, },
            {{48, 107, -33}, {108, 108, 143}, {109, 122, 67}, },
            {{48, 122, -26}, },
            {{48, 122, -26}, },
            {{48, 116, -29}, {117, 117, 144}, {118, 122, 67}, },
            {{48, 122, -26}, },
            {{48, 100, -34}, {101, 101, 145}, {102, 122, 67}, },
            {{48, 90, -26}, {97, 97, 146}, {98, 122, 67}, },
            {{48, 116, -29}, {117, 117, 147}, {118, 122, 67}, },
            {{48, 113, -46}, {114, 114, 148}, {115, 122, 67}, },
            {{48, 98, -86}, {99, 99, 149}, {100, 122, 67}, },
            {{48, 122, -26}, },
            {{48, 110, -32}, {111, 111, 150}, {112, 122, 67}, },
            {{48, 100, -34}, {101, 101, 151}, {102, 122, 67}, },
            {{48, 109, -28}, {110, 110, 152}, {111, 122, 67}, },
            {{48, 104, -31}, {105, 105, 153}, {106, 122, 67}, },
            {{48, 122, -26}, },
            {{48, 113, -46}, {114, 114, 154}, {115, 122, 67}, },
            {{48, 122, -26}, },
            {{48, 90, -26}, {97, 97, 155}, {98, 122, 67}, },
            {{48, 107, -33}, {108, 108, 156}, {109, 122, 67}, },
            {{48, 122, -26}, },
            {{48, 98, -86}, {99, 99, 157}, {100, 122, 67}, },
            {{48, 99, -71}, {100, 100, 158}, {101, 122, 67}, },
            {{48, 109, -28}, {110, 110, 159}, {111, 122, 67}, },
            {{48, 103, -47}, {104, 104, 160}, {105, 122, 67}, },
            {{48, 101, -43}, {102, 102, 161}, {103, 122, 67}, },
            {{48, 122, -26}, },
            {{48, 99, -71}, {100, 100, 162}, {101, 122, 67}, },
            {{48, 110, -32}, {111, 111, 163}, {112, 122, 67}, },
            {{48, 122, -26}, },
            {{48, 114, -74}, {115, 115, 164}, {116, 122, 67}, },
            {{48, 115, -77}, {116, 116, 165}, {117, 122, 67}, },
            {{48, 103, -47}, {104, 104, 166}, {105, 122, 67}, },
            {{48, 100, -34}, {101, 101, 167}, {102, 122, 67}, },
            {{48, 122, -26}, },
            {{48, 122, -26}, },
            {{48, 122, -26}, },
            {{48, 104, -31}, {105, 105, 168}, {106, 122, 67}, },
            {{48, 109, -28}, {110, 110, 169}, {111, 122, 67}, },
            {{48, 114, -74}, {115, 115, 170}, {116, 122, 67}, },
            {{48, 122, -26}, },
            {{48, 122, -26}, },
            {{48, 122, -26}, },
            {{48, 115, -77}, {116, 116, 171}, {117, 122, 67}, },
            {{48, 122, -26}, },
            {{48, 122, -26}, },
            {{48, 104, -31}, {105, 105, 172}, {106, 122, 67}, },
            {{48, 110, -32}, {111, 111, 173}, {112, 122, 67}, },
            {{48, 109, -28}, {110, 110, 174}, {111, 122, 67}, },
            {{48, 122, -26}, },
        }
    };*/

    private static int[][] accept;
/*  {
        // INITIAL
        {5, 0, 0, 0, 0, -1, -1, 4, 8, 12, 13, 4, 3, 17, 3, 18, 4, 5, 5, 29, 23, 9, 10, 9, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 20, 21, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 14, 8, 15, 0, 11, -1, 7, 10, 10, 10, 10, 10, -1, 10, 6, 5, 9, 11, 9, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 24, 35, 46, 46, 46, 46, 46, 10, -1, 1, 1, 6, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 31, 46, 46, 46, 46, 46, 46, 1, 36, 46, 46, 44, 39, 46, 46, 46, 46, 33, 27, 46, 25, 46, 46, 46, 46, 46, 2, 46, 46, 46, 46, 19, 46, 16, 46, 46, 2, 46, 46, 46, 46, 46, 30, 46, 46, 45, 46, 46, 46, 46, 22, 26, 40, 46, 46, 46, 28, 32, 42, 46, 41, 43, 46, 46, 46, 34, },

    };*/

    public static class State
    {
        public final static State INITIAL = new State(0);

        private int id;

        private State(@SuppressWarnings("hiding") int id)
        {
            this.id = id;
        }

        public int id()
        {
            return this.id;
        }
    }

    static 
    {
        try
        {
            DataInputStream s = new DataInputStream(
                new BufferedInputStream(
                Lexer.class.getResourceAsStream("lexer.dat")));

            // read gotoTable
            int length = s.readInt();
            gotoTable = new int[length][][][];
            for(int i = 0; i < gotoTable.length; i++)
            {
                length = s.readInt();
                gotoTable[i] = new int[length][][];
                for(int j = 0; j < gotoTable[i].length; j++)
                {
                    length = s.readInt();
                    gotoTable[i][j] = new int[length][3];
                    for(int k = 0; k < gotoTable[i][j].length; k++)
                    {
                        for(int l = 0; l < 3; l++)
                        {
                            gotoTable[i][j][k][l] = s.readInt();
                        }
                    }
                }
            }

            // read accept
            length = s.readInt();
            accept = new int[length][];
            for(int i = 0; i < accept.length; i++)
            {
                length = s.readInt();
                accept[i] = new int[length];
                for(int j = 0; j < accept[i].length; j++)
                {
                    accept[i][j] = s.readInt();
                }
            }

            s.close();
        }
        catch(Exception e)
        {
            throw new RuntimeException("The file \"lexer.dat\" is either missing or corrupted.");
        }
    }
}
