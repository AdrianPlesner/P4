/* This file was generated by SableCC (http://www.sablecc.org/). */

package P4.Sable.analysis;

import P4.Sable.node.*;

public interface Analysis extends Switch
{
    Object getIn(Node node);
    void setIn(Node node, Object o);
    Object getOut(Node node);
    void setOut(Node node, Object o);

    void caseStart(Start node);
    void caseAProg(AProg node);
    void caseAListExpr(AListExpr node);
    void caseAMultOpExpr(AMultOpExpr node);
    void caseALiteralExpr(ALiteralExpr node);
    void caseAValueExpr(AValueExpr node);
    void caseAAddOpExpr(AAddOpExpr node);
    void caseARelationExpr(ARelationExpr node);
    void caseAEqualityExpr(AEqualityExpr node);
    void caseABoolOpExpr(ABoolOpExpr node);
    void caseAIntLiteral(AIntLiteral node);
    void caseAFloatLiteral(AFloatLiteral node);
    void caseAStringLiteral(AStringLiteral node);
    void caseABoolLiteral(ABoolLiteral node);
    void caseAElement(AElement node);
    void caseAVal(AVal node);
    void caseAFieldCallField(AFieldCallField node);
    void caseACallCallField(ACallCallField node);

    void caseTBlank(TBlank node);
    void caseTComment(TComment node);
    void caseTBoolLiteral(TBoolLiteral node);
    void caseTAddOp(TAddOp node);
    void caseTMultOp(TMultOp node);
    void caseTIntLiteral(TIntLiteral node);
    void caseTFloatLiteral(TFloatLiteral node);
    void caseTString(TString node);
    void caseTBoolOp(TBoolOp node);
    void caseTRelationOp(TRelationOp node);
    void caseTAssign(TAssign node);
    void caseTEqualOp(TEqualOp node);
    void caseTLParen(TLParen node);
    void caseTRParen(TRParen node);
    void caseTLBrack(TLBrack node);
    void caseTRBrack(TRBrack node);
    void caseTSetup(TSetup node);
    void caseTPublic(TPublic node);
    void caseTPrivate(TPrivate node);
    void caseTSeparator(TSeparator node);
    void caseTDot(TDot node);
    void caseTMoves(TMoves node);
    void caseTLBox(TLBox node);
    void caseTRBox(TRBox node);
    void caseTReturn(TReturn node);
    void caseTSemi(TSemi node);
    void caseTIf(TIf node);
    void caseTElse(TElse node);
    void caseTSwitch(TSwitch node);
    void caseTCase(TCase node);
    void caseTDefault(TDefault node);
    void caseTColon(TColon node);
    void caseTWhile(TWhile node);
    void caseTFor(TFor node);
    void caseTForeach(TForeach node);
    void caseTTurn(TTurn node);
    void caseTEndCon(TEndCon node);
    void caseTIn(TIn node);
    void caseTCard(TCard node);
    void caseTLArr(TLArr node);
    void caseTRArr(TRArr node);
    void caseTList(TList node);
    void caseTTypeof(TTypeof node);
    void caseTFun(TFun node);
    void caseTInc(TInc node);
    void caseTSub(TSub node);
    void caseTId(TId node);
    void caseEOF(EOF node);
    void caseInvalidToken(InvalidToken node);
}
